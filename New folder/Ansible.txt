Ansible is a configuration management tool
Ansible will follow push mechanism
Ansible is agent less tool
what is idempotency
means gives same consistant results

Ansible in RHEL8 yum install ansible is not working
need to install pyton2
need to install pip ansible -y
after installation we dont have ansible default structure
we need to create structure of ansile

ACM Should contain (Ansible control machine) linux machine

Enable Password based authentication
       goto      (cd /etc/ssh/sshd_config)
       password authentication yes
      service ssh restart
      service ssh status

1 i want to create user
adduser ansible
enter new passwd
2 giving sudo permission to this user
visudo 
3 install ansible
4 key based authentication
ssh-keygen
ssh-copy-id ansible@ipadress
NODE

1 i want to create user
2 giving sudo permission to this user
3 install python       


Ansible path
cd /etc/ansible

ansible contains
1 ansible.cfg 
2 hosts
3 roles

hosts is nothing but inventory file 

by adding private ip of instance to hosts file

ansible -m ping all


Ansible excutes commands in 2 ways

1) adhoc commands
2) play books

adhoc commands are using in ansible terminal 

What is YAML
 “YAML Ain't Markup Language,”
XML stands for eXtensible Markup Language
key pair values
yaml language converts our keypair values to python language
yml and xml and json these are human and machine redability

before writing yaml need to identify key values based on requirement
sample file

companies:
-  Name:microsft
    Location:Hyderabad
-  Name:google
    Location:Bangalore
Module
module is smallest unit of which used for defining your task
task is nothing but 
playbook 
playbooks consists of tasks

---
- hosts: all
  become: yes
  task:
  - name: install git 
    apt:
     Name:git
     state: present

to run playbook in ansible command is
 ansible-playbook playbook name

ansible palybook with tags:
tags in ansible playbooks is to excute particular task or skip particular  task in ansible 

---
- hosts: all
  become: yes
  task:
  - name: install git 
    apt:
     Name:git
     state: present
    tag: 
      - install
command while excuting
ansible-playbook play.yml --tags=install
ansible-playbook play.yml --skip-tags=install it will skips the particular task


--------------------------------------------
ansible directory structure
 tree /etc/ansible
1 ansible.cfg
2 host
3 roles

Ansible.cfg------

PRIORITY OF ANSIBLE.CFG FILE 
ansible_config environment variable as  -i host filename
current directory
home directory
/etc/ansible

if u want change inventory file u need to mention it in the  ansible.cfg

while working in real time we need to create our own workspace of ansible 
steps
1 create a directory in ur home
2 cp all files /etc/ansible/* to your home directory
3 give  owner permission for copied directory
4 change host file location in ansible.cfg  

--------------------------------------------------
grouping in ansible host file is usefulway 

[group1]
--------
--------
--------
[group2]
------
-------
-------

[group3]
--------
--------
------

[largegroup:children]
group1
group2

--------------------------------------------------------
host_key_checking=false in ansible.cfg file
means we need give fingerprint acess as true while first time connecting to the nodes yes/no yes 
if we provide host key it will not ask
----------------------------------------------------
in rhel we are unable to install ansible
so we can install ir from pip

yum install pytho2

pip2 ansible install

with pip installation ansible we not get default directory
we need to create our own directorty with
ansible.cfg
roles
hosts
ansible.cfg
[defaults]
inventory = directory of host
host_key_checking=false
-------------------------------------------------------
adhoc commands

adhoc commands are used to excute one simple task
with one or more servers

syntax
ansible [-i prod_inv]  server_name:group1:group2 -m module [-a argument_value]

When ever you want run single command like restart we will use ansible adhoc commands

FORK IS NOTHING BUT DEFAULT ANSIBLE EXCUTES PLAYBOOKS PARALLEL IN NODES BY  FORKS VALUES

if you want store ansible modules in nodes give a comment as in ansible.cfg
ANSIBLE_KEEP_REMOTE_FILES=1

when ur excuting any adhoc command or playbook 
In nodes it will create .ansible directory 
in that directory we have tmp directory in tmp it will store our modules
-------------------------------------------------
copy module

ansible all -m copy -a src dest

ansible -m copy -a "content=this content dest=/tmp/hello.txt"
if there is any file with same name give a arguement as -a backup=yes
fetch module

ansible all -m fetch -a src dest

copy*fetch
oppsite to copy 
fetch will take data from node to control machine

flat =yes means it will not create directory of node where file is located

command module 
ansile will take y default command module

--------------------------------------
create and delete using adhoc commands

using module called file or diectory

ansible all -m file "path=/tmp/hello.txt state=touch" 

ansible all -m file "path=/tmp/hello.txt state=directory"

-b or --become=yes
sudo permisions to user
--------------------------------
facts is nothiing but knowing information about managed nodes
here we are using module called setup

ansible all -m setup -a"filter=ansible_mounts"
-------------------------------------
facts are two types 
1 default facts
2 custom facts
other tahn default facts u want collect extra data then u need to create custom facts
what is custom facts
if u want know versions of all applications like git maven python u can create custom facts
steps to make custom facts

1 create /etc/ansble/facts.d in managed nodes
2 create a file name with .fact extension
3 create a shell/bash script in .fact file
4 give excution permission to that file
sample

to know git and httpd version we need create one custom fact

ansible all -m file -a "path=/etc/ansible/facts.d touch=directory" -b

ansible all -m file -a "path=/etc/ansible/facts.d/custom.fact
 touch=file" -b
vi custom.fact
#!/bin/bash

git_ver=$(git --version | awk '{print$3}')
httpd_ver=$(httpd -version | awk 'NR=1 {print $3}')

cat << EOF
{ "Git_version": "$git_ver"
   "httpd_versiom: $httpd_ver"
}
EOF

--------------------------------------
Inventories

are two type
1 static inventory 
2 dyanamic inventory

Dyanamic inventory is uesd when node are in cloud platform

need to add scripts based on cloud platform we need to download scripts
for aws
1 ec2.ini
2 ec2.py
to run the above scripts
need to instal boto 
sudo yum install boto -y

need to add iam role to ansible engine
full acess to  all ec2 instance

if u launch new ec2 server as mannuly ansible will not reach new server bcoz
the server didnot exchaanged keys for passwd less authentication
in real time cases we need to we will configure auoscaling with configred AMI which already exchanged so no problem will occured.
anisble-playbook  play.yml -i ec2.in
adhoc command is
ansible {ec2users} group name -m module -a argument -i hostnamr {ec2.in}




-------------------------------------
some manage nodes doesnot having python then we can use raw module

ansible ip -m raw -a "scp"
--------------------------------------
debug module
>this module prints statements while excution and can be useful for debugging variables and expressions
> debug module accepts three parameters
1 msg it will print the msg what u given
2 var it will print default variables
3 verbosity  -- if u verbosity value it will excute the task at mentiond verbosity only
if u didnot provided verbosity in terminal it will skip like tags
--------------------------------------playbook rules


---
 - hosts
   become=yes
   tasks:
   - debug: msg='welcome to ansible playbook'
   -	
   -
------------------------------------------------------
roles
- place the group of playbooks in one file, it will help to reduce the code omplexity, and increses

steps
 ansible-galaxy init lamp

------------------------------------------

what is handler

handler is simple as like a task in playbook it comes with notify
----------------------------------------------
ansile adhoc commands
to excute one task
commad
ansible {servers}where u want excute -m {module} -a{arguement}
------------------------------------------------------------

In Ansible We can connect managed nodes by using two way
1) passwd less authentication using sshkeys exchanges
2) passwd based authentication creating same user and passwd in all nodes and acm

create a same user in all nodes and passwd also

after that create sudo permission to user

visudo
below root user
username= ALL NOPASSWD= ALL

adhoc command to do this

ansible all -m ping -k -b -K
k is use for connecting node need to give passwd
b is used to become sudo
K is use for sudo passwd if you didnot provided (NOPASSWD= ALL) in sudo

If the managed node and ACM does having same user from ACM the module will directly excuted at ansadmin
it it not there we need to give the user which is present in managed node

adhoc command is: ansible ipadress -m ping -k -u username


-------------------------------------------------------------------
Ansible Variables

Variale is nothin but storing values

types of variables
1 default variables
2 inventory vars(host vars and group vars)
3 facts and local facts
4 registerd vars



---------------------------------------
playbooks

playbook is useful to perform multiple tasks and overcome the limitation of adhoc commands
play book consists of no of plays

simple syntax for playbooks

---
  - host: all
    name: this is syntaxof play book
    tasks:
    - name: this is a first module
      module
    - name: this is a second module
      module2

---------------------------------------
Ansile variable
1 default variables
2 custom variables

data types
we have 4 data types
1 c: 25 integer
2 d: 25.63 flating point
3 my_name: mahesh uniqu code or string
4 my_boolen: true false yes no these are boolean parameters if u want provide these values as a string u need to use a quatations

sample playbook 

--- 
  - hosts: all
    become: yes
    vars:
      x: 26
      y: 12.35
      my_name: mahesh or "mahesh"
      my_boolean: True
    gathering_facts: false
    tasks:
    - name: printing my x value
      debug: 
       msg: 
        -   "the value of x is {{x}}"
        -
        - 

Key value representations is scalar

one key multile values is called list or sequence

pakgs: 
- 'vim'
- 'nginx'
- 'httpd'

maping or dictionary

web_servers:
- Linux: 'httpd'
- Windows: 'vim' 

If u want store the op of modules by using a variable called a register

---
  - hosts
    gather_facts: false
    tasks:
    - shell: bash --version
      register: ash_ver

    - debug: 
        var=ash_ver



--------------------------------------------------------------
variables in yml or playooks
1 vars

In simply we can store our variables in vars section

x: 25
t: 52
my_name: mahesh

2) vars_promt

in vars prompt section we cat give variable as a command promt

---
  - hosts
    vars_prompt:
     - name: variale_name
       prompt: Enter ur Variablename
       private: no
prompt we give prompt to user
private no means it will to user what he entered

3) vars_files

we can store our variables into one file and we can call them
---
  -hosts
   vars_files:
    - filename
    - filename2

4) we can pass variale values in command line
ansible-playbook play.yml -e x=var_value

----------------------------------
for arthematic operations we are using zinja syntax in ansible'
vars
x: 45
y: 58
{{x}} -{{y}} = {{x+y}}

if
 ur doing it with
vars_prompt
- name: x
  prompt:  enter the value of x
  private: no
- name: y
  prompt: the value of y
  private: no
task: 
- debug:
   the value of x+y is {{x|int+y|int}} 

by default prompt will take as string as variable

-------------------------------------------------
condition statement

When is simply if statement in oter python and shells

a simple playbook using when statement

---
  - hosts: all
    gather_facts: yes
    become: yes
    tasks:
      - name: installing httpd in all servers
        yum: 
          name: httpd
          state: present
        when: ansible_distribution != ubuntu
      - name: installing httpd in ubuntu servers
        apt:
          name: httpd
          state: present
        when: ansible_distribution == "ubuntu"

----------------------------------------------------------
Inline condition statement

nohing But ifelse

a simple playbook

---
  - hosts: all
    gather_facts: false
    become: yes
    vars:
      x: 5
      y: 58
      larger: "{{ x if (x>y) else y }}"
    tasks: 
    - name: debug mdoule to display larest number
      debug: "the largest number is: {{larger}}" 

      

----------------------------------------------
Handlers:

Handlers are noting but simple tasks, handlers will excute a task when notify section is present

that means when there is change in your task notify will allow you to excute a  task

---
  - hosts: localhost
    gather_facts: false
    become: yes
    tasks:
      - name: Install httpd
        yum:
          name: httpd
          state: present
        notify:
          - start httpd
    handlers:
      - name: start httpd
        service:
          name: httpd
          state: started

--------------------------------------------------------
Loops:

Simply loops are nothing but excuting simple tasks with multiple times 

---
  - hosts: localhost
    gather_facts: false
    become: yes
    tasks:
      - yum:
         name: gettext-devel
         state: present
      - yum:
         name: openssl-devel
         state: present
      - yum:
         name: perl-CPAN
         state: present
      - yum:
         name: perl-devel
         state: present
      - yum:
         name: zlib-devel
         state: present

---
  - hosts: localhost
    gather_facts: false
    become: yes
    tasks:
      - yum:
         name: "{{item}}"
         state: absent
        loop:
          - gettext-devel
          - openssl-devel
          - perl-CPAN
          - perl-devel
          - zlib-devel