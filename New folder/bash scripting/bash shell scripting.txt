Sh is original shell
bash bourne again shell
Bash is noth bu original sh shell + some additional features 
it was reinvented of shell
-------------------
To change permissions to file
chmod 755
chmod +x for all users
chmod u+x 

.sh is not necessary to excute shell

comments are not excuted by the script
two type
single line comment
muluti line comment

1 #
2 << myline

>>

Variables:
 
read command is used to take input from terminal

What is the default variable for read command is REPLy
-------------------------------------------
Basically system defined commands will present at usr/bin

which pwd
which cp
which ls 
will be in usr/bin directorty

do u want define any variales to pass a commands you need create a script and copy to the particular path

ec2-user/bin
if u copy anything to bin it will excutes as a script

we need to create one folder for scripts if you want excutes those are system defined commands
need add the script locations to
vi .bash_profiles
add the path
and 
source .bash_profiles 
--------------------------------------------
variables 

Variables are an important part of any program or script. A variable is a simple way of storing our data

variale can be define in terminal and script

Need to print the variable value or call your variable you need to code $ infront of variable

rule

1)variable name should contain lettets(A-Z) numbers (0-9), (_)
2) variable name should not start with numbers
3) variable name should not have any gaps

rules for storing data

if u want store data with spaces use x="in beween data should be present"   
if not u can code like x=nogaps

variable and types

1 user defined variables
2 system defined variable
3 spcial variable

system defined variables are present inside the system or os
with env command we can check all system defined variables.

echo "$"
$? is a special  variable is using we are
it  will give result of your old previous excuted command 
if op is 0 it is ok
in not it was a error 
--------------------------------------
if u want stroe ur command output into file u need to mention it as
ls > filename

----------------------------
configuring gmail setup on linux server

yum install send mail mail utils -y
----------------------------------
grep command

grep will search sring/pattern in A file

basic opreations
options in grep 

-i it will search with case sensitive
-w search with word matching
-v display the values which are not matchng with string
-o display matched parts from matched lines
-n display matched line number
-c display mached count of line number
-A display after the string n no of lines
-B before the string
-C display both
-r display recursively current directory and its sub directory
-l to display only file names
-h to print content and hide filenames

Some Aadvance grep commands  to find " pattern or multiple strings"
-f means need to create a file and give the strings which u want search in file 
grep -f file no.txt

-e means we can search multiple strings here
grep -e "string" -e "string2" -e "string3"  filename

grep -E [options] filename.txt
grep -E "string1|string2|string3" filename.txt

pattern is noting but more than one string

rules to create pattren
| PIPE 
^ THIS CAP symbol is used to create search starting with "string" will diplay
$ reverse to ^
grep -E "^$"  -displays empty lines
/ remove the special purpose of the symal
pattern to match directories

grep -E "^d"

pattern to match files

grep -E "^_"

ipv4 severs means 1.2.3.4  each one having 1-999.1-999.1-999.1-999

------------------------------------------------cu
cut command'
cut command is a powerful command which will give output with tab differed by difault
cut -f 1 filename.txt it will print 1 column
cut -d ':' -f 1 filename.txt d is the field seperator

--------------------------------
tr command (transfer) 
will translate lower case to upper case

translate characters from one letter to other letter
tr [] [] <file.txt
tr "i" "I" <file.txt
tr -d "," it will delete , in the op
-----------------------------
tee command
to display output of command store into we will use file

ls -ltr | tee -a abs.txt
---------------------------------

simple hello world command

echo command advanced options

echo -e \n means nextline
        \t horizontal tab
\t vertical tab
\b backspace
\r carring return
\ escape characters

----------------------------------------------------
for any linux system we can use 
#!/usr/bin/usr bash it will work in all linux system

-------------------------------------------
Debugging of shell script:
determinig the cause which fails the script
types
1 syntax errors
2 runtime errors

run excution will throw a error
but in case of syntax errors the script will stop 

bash is an interpeter
bash will excutes code line by line

debugging will be done with set commands

set -n simply syntax errors
set -x it will display command and op
set -e exit script if any command fails
------------------------------------------
how to pass command l
0
command line arguments or variables we can pass while excution of the script

sh xys.sh 52 54 56

echo "$1"
echo "$2"
echo "$3"

to print all variables
echo "$@"

or echo"$*"

to know the count of command line arguments

echo "$#"

------------------------------------------------------
arthematic operation bash scrpting

advanced modes 
1 (()) double parathasis

ex: ((sum=x+y))

2 bc bash calucaltor

ex: "bc<<<$x+$y"
-------------------------------------------
Simple case statement

case
  1) statement
    ;;
  2) statement
   ;;

   *) statement
    ;;
 esac

--------------------------------------------------
at command: 
at command is used schdule ur job at onetime
syntax: at 9.00
enter filename.sh
cntl+D
 
one more syntax
at  9.00 AM july 25
enter script name

do you want know how many scripts are with at
atq 
atrm no to remove schedules
-----------------------------------------------
crontab -e
we can write our jobs which u want take backup

* * * * * sh script.sh

* time in minutes
* hours
* days of month
* months in the year
* day in the week

 